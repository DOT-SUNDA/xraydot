#!/bin/bash

# ======================
# WARNA DAN FORMAT TEKS
# ======================
BGreen='\e[1;32m'
NC='\e[0m'
DEFBOLD='\e[39;1m'
RB='\e[31;1m'
GB='\e[32;1m'
YB='\e[33;1m'
BB='\e[34;1m'
MB='\e[35;1m'
CB='\e[35;1m'
WB='\e[37;1m'

secs_to_human() {
  echo -e "${WB}Installation time : $(( ${1} / 3600 )) hours $(( (${1} / 60) % 60 )) minute's $(( ${1} % 60 )) seconds${NC}"
}

start=$(date +%s)

# ======================
# PAKET DAN DEPENDENSI
# ======================
rm -rf xray
clear
apt update -y && apt upgrade -y && apt dist-upgrade -y
apt install -y socat netfilter-persistent vnstat lsof fail2ban curl sudo screen cron screenfetch resolvconf network-manager dnsutils bind9 nginx

# ======================
# DNS DAN JARINGAN
# ======================
mkdir -p /backup /user /tmp

cat > /etc/systemd/resolved.conf << END
[Resolve]
DNS=8.8.8.8 8.8.4.4
Domains=~.
ReadEtcHosts=yes
END

systemctl enable resolvconf systemd-resolved NetworkManager
rm -f /etc/resolv.conf /etc/resolvconf/resolv.conf.d/head

echo "nameserver 127.0.0.53" > /etc/resolv.conf
echo "" > /etc/resolvconf/resolv.conf.d/head

systemctl restart resolvconf systemd-resolved NetworkManager

# ======================
# PASANG XRAY CORE
# ======================
rm -f /usr/local/etc/xray/city /usr/local/etc/xray/org /usr/local/etc/xray/timezone
bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" - install --beta
cp /usr/local/bin/xray /backup/xray.official.backup
curl -s ipinfo.io/city > /usr/local/etc/xray/city
curl -s ipinfo.io/org | cut -d " " -f 2-10 > /usr/local/etc/xray/org
curl -s ipinfo.io/timezone > /usr/local/etc/xray/timezone

# ======================
# GANTI DENGAN MOD XRAY
# ======================
echo -e "${GB}[ INFO ]${NC} ${YB}Download Xray-core mod${NC}"
wget -q -O /backup/xray.mod.backup "https://github.com/dharak36/Xray-core/releases/download/v1.0.0/xray.linux.64bit"

# ======================
# PASANG SPEEDTEST
# ======================
curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash
apt install speedtest -y

# ======================
# NGINX DAN HTML DIR
# ======================
ln -fs /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
rm -f /var/www/html/*.html /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default
mkdir -p /var/www/html/{vmess,vless,trojan,shadowsocks,shadowsocks2022,socks5,allxray}
systemctl restart nginx

# ======================
# INPUT DOMAIN DAN API CLOUDFLARE
# ======================
echo -e "${YB}Input Domain (contoh: *.sub.domain.tld)${NC}"
read -rp "Domain wildcard: " dns
[ -z "$dns" ] && echo "No domain entered!" && exit 1
echo "$dns" > /usr/local/etc/xray/domain
echo "DNS=$dns" > /var/lib/dnsvps.conf

read -rp "Masukkan email Cloudflare: " cf_email
read -rp "Masukkan Global API Key Cloudflare: " cf_key

# ======================
# PASANG SERTIFIKAT WILDCARD
# ======================
systemctl stop nginx
systemctl stop xray

export CF_Email="$cf_email"
export CF_Key="$cf_key"
curl https://get.acme.sh | sh
source ~/.bashrc
cd ~/.acme.sh

bash acme.sh --issue --dns dns_cf -d "$dns" \
  --keylength ec-256 \
  --fullchain-file /usr/local/etc/xray/fullchain.crt \
  --key-file /usr/local/etc/xray/private.key \
  --force --server letsencrypt

# ======================
# KONFIGURASI NGINX & XRAY
# ======================
echo "UQ3w2q98BItd3DPgyctdoJw4cqQFmY59ppiDQdqMKbw=" > /usr/local/etc/xray/serverpsk
wget -q -O /usr/local/etc/xray/config.json https://raw.githubusercontent.com/givpn/aio/master/other/config.json
wget -q -O /etc/nginx/nginx.conf https://raw.githubusercontent.com/givpn/aio/master/other/nginx.conf
rm -rf /etc/nginx/conf.d/xray.conf
wget -q -O /etc/nginx/conf.d/xray.conf https://raw.githubusercontent.com/givpn/aio/master/other/xray.conf

systemctl restart nginx
systemctl restart xray

wget -O /var/www/html/index.html "https://raw.githubusercontent.com/givpn/aio/master/other/index"

# ======================
# BLOKIR BITTORRENT
# ======================
ipset -! create blacklist hash:ip hashsize 4096
iptables -A FORWARD -m string --string "BitTorrent" --algo bm -j DROP
iptables-save > /etc/iptables.up.rules
netfilter-persistent save
netfilter-persistent reload

# ======================
# DOWNLOAD MENU DAN SCRIPT PELENGKAP
# ======================
cd /usr/bin
menu_list=(menu vmess vless trojan shadowsocks shadowsocks2022 socks allxray \
add-vmess del-vmess extend-vmess trialvmess cek-vmess \
add-vless del-vless extend-vless trialvless cek-vless \
add-trojan del-trojan extend-trojan trialtrojan cek-trojan \
add-ss del-ss extend-ss trialss cek-ss \
add-ss2022 del-ss2022 extend-ss2022 trialss2022 cek-ss2022 \
add-socks del-socks extend-socks trialsocks cek-socks \
add-xray del-xray extend-xray trialxray cek-xray \
log-create log-vmess log-vless log-trojan log-ss log-ss2022 log-socks log-allxray \
xp dns certxray xraymod xrayofficial about clear-log changer)

for file in "${menu_list[@]}"; do
  wget -q -O "$file" "https://raw.githubusercontent.com/givpn/aio/master/menu/$file.sh" || \
  wget -q -O "$file" "https://raw.githubusercontent.com/givpn/aio/master/other/$file.sh"
  chmod +x "$file"
done

# ======================
# CRONJOBS DAN OTOMATIS
# ======================
echo "0 0 * * * root xp" >> /etc/crontab
echo "*/3 * * * * root clear-log" >> /etc/crontab
systemctl restart cron

# ======================
# AKHIR DAN TAMPILAN MENU
# ======================
cat > /root/.profile << END
if [ "$BASH" ]; then
  if [ -f ~/.bashrc ]; then
    . ~/.bashrc
  fi
fi
mesg n || true
clear
menu
END
chmod 644 /root/.profile

clear
echo -e "${BB}—————————————————————————————————————————————————————————${NC}"
echo -e "                     ${WB}MOD SCRIPT BY GIVPN${NC}"
echo -e "${BB}—————————————————————————————————————————————————————————${NC}"
echo -e "  ${WB}»»» Protocol Service «««  |  »»» Network Protocol «««${NC}  "
echo -e "${BB}—————————————————————————————————————————————————————————${NC}"
echo -e "  ${YB}- Vless${NC}                   ${WB}|${NC}  ${YB}- Websocket (CDN) non TLS${NC}"
echo -e "  ${YB}- Vmess${NC}                   ${WB}|${NC}  ${YB}- Websocket (CDN) TLS${NC}"
echo -e "  ${YB}- Trojan${NC}                  ${WB}|${NC}  ${YB}- gRPC (CDN) TLS${NC}"
echo -e "  ${YB}- Socks5${NC}                  ${WB}|${NC}"
echo -e "  ${YB}- Shadowsocks${NC}             ${WB}|${NC}"
echo -e "  ${YB}- Shadowsocks 2022${NC}        ${WB}|${NC}"
echo -e "${BB}————————————————————————————————————————————————————————${NC}"
echo -e "               ${WB}»»» Network Port Service «««${NC}             "
echo -e "${BB}————————————————————————————————————————————————————————${NC}"
echo -e "  ${YB}- HTTPS : 443, 2053, 2083, 2087, 2096, 8443${NC}"
echo -e "  ${YB}- HTTP  : 80, 8080, 8880, 2052, 2082, 2086, 2095${NC}"
echo -e "${BB}————————————————————————————————————————————————————————${NC}"

rm -f xray
secs_to_human "$(($(date +%s) - ${start}))"
echo -e "$BGreen Auto reboot in 10 seconds...$NC"
sleep 10
reboot
